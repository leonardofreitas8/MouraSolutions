// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MouraSolutionsWeb.Data;

namespace MouraSolutionsWeb.Migrations
{
    [DbContext(typeof(MouraExpressContext))]
    [Migration("20201026141429_MigraTodosEntidades")]
    partial class MigraTodosEntidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MouraSolutionsWeb.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("MotoboyId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerfilCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.HasIndex("MotoboyId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data_Registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Contato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone_Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone_Comercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone_Recado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zona_Setor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEndereco");

                    b.HasIndex("ClienteID");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Motoboy", b =>
                {
                    b.Property<int>("MotoboyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeelefoneCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeelefoneFixo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Veiculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("MotoboyId");

                    b.HasIndex("ZonaId");

                    b.ToTable("Motoboy");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfClinica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfEscritorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfMoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<string>("Protocolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusIdStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tma")
                        .HasColumnType("datetime2");

                    b.Property<int>("statusProtocolo")
                        .HasColumnType("int");

                    b.HasKey("IdPaciente");

                    b.HasIndex("PedidoId");

                    b.HasIndex("StatusIdStatus");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPedidoRetirada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obsercao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.Property<int>("statusPedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ZonaId");

                    b.HasIndex("statusPedidoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.StatusPedido", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusPedido");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.StatusProtocolo", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatus");

                    b.ToTable("StatusProtocolo");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemUser");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Zona", b =>
                {
                    b.Property<int>("IdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BairrosAtendidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaixaCeps")
                        .HasColumnType("int");

                    b.Property<string>("ZonaNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdZona");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Cliente", b =>
                {
                    b.HasOne("MouraSolutionsWeb.Models.Motoboy", "Motoboy")
                        .WithMany("Clientes")
                        .HasForeignKey("MotoboyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Endereco", b =>
                {
                    b.HasOne("MouraSolutionsWeb.Models.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Motoboy", b =>
                {
                    b.HasOne("MouraSolutionsWeb.Models.Zona", "Zona")
                        .WithMany("Motoboys")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Paciente", b =>
                {
                    b.HasOne("MouraSolutionsWeb.Models.Pedido", "pedido")
                        .WithMany("Pacientes")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MouraSolutionsWeb.Models.StatusProtocolo", "Status")
                        .WithMany("pacienteStatus")
                        .HasForeignKey("StatusIdStatus");
                });

            modelBuilder.Entity("MouraSolutionsWeb.Models.Pedido", b =>
                {
                    b.HasOne("MouraSolutionsWeb.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("MouraSolutionsWeb.Models.Zona", "Zona")
                        .WithMany("Pedidos")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MouraSolutionsWeb.Models.StatusPedido", "statusPedido")
                        .WithMany("pedidosStatus")
                        .HasForeignKey("statusPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
